{"version":3,"sources":["components/navigation/Resume.pdf","components/navigation/Navigation.js","components/front/Front.js","components/about/profile-pic.png","components/about/AboutMe.js","components/project/Project.js","components/projectObjects/projectObjects.js","components/projects/Projects.js","components/experience/Experience.js","components/contact/ContactMe.js","components/skillList/skillList.js","components/skill/Skill.js","components/skills/Skills.js","components/education/Education.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","id","style","styles","navbar","variant","className","sticky","Nav","Link","to","smooth","duration","Button","href","Resume","target","React","Component","backgroundColor","top","Front","front","Container","container","fluid","Row","Col","xs","mainLine","color","opacity","borderColor","borderWidth","AboutMe","md","Image","src","Img","alt","rounded","links","rel","github","linkedin","email","Project","getLink","link","dest","githublink","this","props","project","title","description","tools","toolDict","options","max","scale","Card","card","Body","Title","map","Subtitle","Text","Footer","tool","paddingBottom","height","marginRight","count","projects","uuid","number","url","Projects","state","projectList","isExpanded","handleExpand","setState","handleCollapse","toggleButton","onClick","getOtherProjects","filter","otherProjects","xl","lg","sm","Collapse","in","ButtonGroup","bsPrefix","Experience","ContactMe","size","skills","langs","header","text","Skill","skill","lang","Skills","SkillList","smallLines","Education","require","config","API_URL","process","REACT_APP_SERVER_URL","App","java","javascript","python","jupyter","html","css","react","reactnative","node","linux","jest","c","ruby","django","fontSize","mongodb","googlecloud","mocha","bootstrap","cpp","npm","word","excel","powerpoint","windows","position","URL","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c144fa1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Resume.5158d349.pdf\";","import React from \"react\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\nimport Resume from \"./Resume.pdf\";\nimport \"./Navigation.css\";\n\nimport { Link } from \"react-scroll\";\n\nclass Navigation extends React.Component {\n    render() {\n        return (\n            <Navbar\n                id=\"navigation\"\n                style={styles.navbar}\n                variant=\"dark\"\n                className=\"justify-content-md-center\"\n                sticky=\"top\"\n            >\n                <Nav id=\"nav-links\">\n                    <Nav.Link>\n                        <Link to=\"about\" smooth={true} duration={1000}>\n                            About\n                        </Link>\n                    </Nav.Link>\n                    <Nav.Link>\n                        {\" \"}\n                        <Link to=\"skills\" smooth={true} duration={1000}>\n                            Skills\n                        </Link>\n                    </Nav.Link>\n                    <Nav.Link>\n                        <Link to=\"projects\" smooth={true} duration={1000}>\n                            Projects\n                        </Link>\n                    </Nav.Link>\n                    <Nav.Link>\n                        <Link to=\"education\" smooth={true} duration={1000}>\n                            Education\n                        </Link>\n                    </Nav.Link>\n                    <Nav.Link>\n                        <Link to=\"experience\" smooth={true} duration={1000}>\n                            Experience\n                        </Link>\n                    </Nav.Link>\n                    <Nav.Link>\n                        <Link to=\"contact\" smooth={true} duration={1000}>\n                            Contact\n                        </Link>\n                    </Nav.Link>\n                    <Button\n                        variant=\"outline-light\"\n                        href={Resume}\n                        target=\"_blank\"\n                    >\n                        Resume\n                    </Button>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\nconst styles = { navbar: { backgroundColor: \"#0d2c5a\", top: -1 } };\n\nexport default Navigation;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./Front.css\";\n\nclass Front extends React.Component {\n    render() {\n        return (\n            <div id=\"front\" style={styles.front}>\n                <Container id=\"container\" style={styles.container} fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"auto\">\n                            <h1 id=\"name\" className=\"display-3\">\n                                <strong>STEFAN WERLEMAN</strong>\n                                <hr style={styles.mainLine} />\n                            </h1>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"auto\">\n                            <h4 id=\"sub\">COMPUTER SCIENCE STUDENT AT UCF</h4>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    front: {\n        color: \"white\",\n    },\n    container: {\n        backgroundColor: \"#0d2c5a\",\n        opacity: 0.7,\n    },\n    mainLine: {\n        borderColor: \"white\",\n        borderWidth: 5,\n    },\n};\n\nexport default Front;\n","export default __webpack_public_path__ + \"static/media/profile-pic.f00be177.png\";","import React from \"react\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { IoMdMail } from \"react-icons/io\";\nimport { Link } from \"react-scroll\";\nimport Img from \"./profile-pic.png\";\nimport \"./AboutMe.css\";\n\nclass AboutMe extends React.Component {\n    render() {\n        return (\n            <div id=\"about\">\n                <Container id=\"about-container\" fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"about-title\" className=\"display-4\">\n                                About Me\n                            </p>\n                            <hr style={styles.mainLine} />\n                        </Col>\n                    </Row>\n                    <Row id=\"about-body\" className=\"justify-content-lg-center\">\n                        <Col id=\"image-container\">\n                            <Image\n                                id=\"profile-pic\"\n                                src={Img}\n                                alt=\"Profile Picture\"\n                                rounded\n                            ></Image>\n                        </Col>\n                        <Col id=\"text-container\">\n                            <p id=\"about-text\">\n                                <strong>Hello,</strong>\n                                <br />\n                                <br />I am a Senior at the University of Central\n                                Florida majoring in Computer Science. I graduate\n                                in Summer 2021. I am seeking a Software\n                                Engineering internship for Spring 2021 or Summer\n                                2021. I am interested in the Finance and Space\n                                industries. By obtaining an internship, I hope\n                                to gain the experience and knowledge necessary\n                                to provide optimal results at the company I work\n                                for in my career. I am a very diligent and\n                                detail-oriented individual that always strives\n                                to stay on the cutting-edge of technology. I\n                                hope to bring these qualities to an internship.\n                                <br />\n                                <br />\n                                If you are interested, you can view some of my{\" \"}\n                                <strong>\n                                    <a href=\"#/projects\">\n                                        <Link\n                                            to=\"projects\"\n                                            smooth={true}\n                                            duration={1000}\n                                        >\n                                            projects\n                                        </Link>\n                                    </a>\n                                </strong>{\" \"}\n                                in down below and feel free to reach out to me\n                                on LinkedIn or send me an{\" \"}\n                                <strong>\n                                    <a href=\"#/contact\">\n                                        <Link\n                                            to=\"contact\"\n                                            smooth={true}\n                                            duration={1000}\n                                        >\n                                            email\n                                        </Link>\n                                    </a>\n                                </strong>\n                                .\n                            </p>\n                            <h3 id=\"links\" style={styles.links}>\n                                <a\n                                    href=\"https://github.com/stefanwerleman\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <GoMarkGithub style={styles.github} />\n                                </a>\n\n                                <a\n                                    href=\"https://www.linkedin.com/in/stefanwerleman\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <FaLinkedin style={styles.linkedin} />\n                                </a>\n                                <a\n                                    href=\"#/contact\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <Link\n                                        to=\"contact\"\n                                        smooth={true}\n                                        duration={1000}\n                                    >\n                                        <IoMdMail style={styles.email} />\n                                    </Link>\n                                </a>\n                            </h3>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    linkedin: { color: \"black\" },\n    github: { color: \"black\" },\n    email: { color: \"black\" },\n    mainLine: {\n        borderColor: \"#FF1B1C\",\n        borderWidth: 5,\n    },\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { ImFolderOpen } from \"react-icons/im\";\nimport { GoMarkGithub, GoLinkExternal } from \"react-icons/go\";\nimport Tilt from \"react-tilt\";\nimport \"./Project.css\";\n\nclass Project extends React.Component {\n    getLink = (link) => {\n        let dest = link[\"github\"];\n\n        if (dest) {\n            return (\n                <a href={dest} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <GoMarkGithub style={styles.githublink} />\n                </a>\n            );\n        }\n        dest = link[\"url\"];\n\n        if (dest) {\n            return (\n                <a href={dest} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <GoLinkExternal style={styles.link} />\n                </a>\n            );\n        }\n\n        return null;\n    };\n\n    render() {\n        const { links, title, description, tools } = this.props.project;\n        const toolDict = this.props.tools;\n\n        return (\n            <Tilt id=\"tilt-container\" options={{ max: 2.5, scale: 1.07 }}>\n                <Container id=\"card-container\" style={styles.container}>\n                    <Card style={styles.card}>\n                        <Card.Body id=\"card-body\">\n                            <Card.Title id=\"top-links\" className=\"d-flex\">\n                                <ImFolderOpen\n                                    id=\"folder-icon\"\n                                    className=\"mr-auto\"\n                                />\n\n                                {links.map((link) => this.getLink(link))}\n                            </Card.Title>\n\n                            <Card.Subtitle id=\"card-title\">\n                                {title}\n                            </Card.Subtitle>\n                            <Card.Text style={styles.description}>\n                                {description}\n                            </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                            <Card.Title id=\"bottom-links\">\n                                {tools.map((tool) => toolDict[tool])}\n                            </Card.Title>\n                        </Card.Footer>\n                    </Card>\n                </Container>\n            </Tilt>\n        );\n    }\n}\n\nconst styles = {\n    container: { paddingBottom: 25, height: \"100%\" },\n    card: { backgroundColor: \"#eee\", borderWidth: 0, height: \"100%\" },\n    description: { color: \"#39689b\" },\n    githublink: { color: \"black\", marginRight: 7 },\n    link: { marginRight: 7 },\n};\n\nexport default Project;\n","import {v1 as uuid} from \"uuid\";\n\nlet count = 0;\n\nconst projects = [\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            { github: \"https://github.com/stefanwerleman/facebook-clone\" },\n            { url: null },\n        ],\n        title: \"Facebook Clone\",\n        description:\n            \"Developed a full-stack website that simulates a basic user chat system. Stored all data using MongoDB and conducted all testing with the Mocha framework.\",\n        tools: [\n            \"javascript\",\n            \"node\",\n            \"mongodb\",\n            \"html\",\n            \"css\",\n            \"mocha\",\n            \"linux\",\n        ],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: \"https://github.com/stefanwerleman/portfolio\",\n            },\n            {\n                url: \"https://www.stefanwerleman.com\",\n            },\n        ],\n        title: \"This Personal Website\",\n        description:\n            'This personal website demostrates my entire portfolio. With the help of ReactJS and NodeJS I was able create this fully functioning website for all of you to see. I used Google Cloud Marketplace\\'s SendGrid API to manage the email in the \"Contact Me\" section.',\n        tools: [\n            \"javascript\",\n            \"react\",\n            \"bootstrap\",\n            \"css\",\n            \"node\",\n            \"python\",\n            \"django\",\n            \"googlecloud\",\n            \"linux\",\n        ],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: \"https://github.com/KnightHacks-GMSJ/AllThingsBooks\",\n            },\n            { url: null },\n        ],\n        title: \"All Things Books\",\n        description:\n            \"Developed a search engine for books, publishers, and authors using React Native. This project was made during the 2020 KnightHacks Virtual Hackathon. I was responsible for receiving the list of books from the Google Cloud Books API and processing them to make a list.\",\n        tools: [\"reactnative\", \"javascript\", \"googlecloud\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: \"https://github.com/stefanwerleman/full-stack-app\",\n            },\n            {\n                url:\n                    \"https://stefanwerleman-full-stack-app.stefanwerleman.workers.dev/\",\n            },\n        ],\n        title: \"Cloudflare Workers Full Stack App\",\n        description:\n            \"Developed a web application that sends the user to two of one webpages. This challenge helped me learn how to write applications with the Cloudflare Workers API. The command-line tool Wrangler was used on the Linux terminal to run and deploy the application.\",\n        tools: [\"javascript\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Skip List\",\n        description:\n            \"Built a Java container class that containsmethods and operations to perform complex insertion and deletion algorithms for this probabilistic data structure. Utilized heavy algorithm analysis to verify the time and space complexity of the data structure.\",\n        tools: [\"java\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: \"https://github.com/stefanwerleman/trie-container\",\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Trie Object\",\n        description:\n            \"Wrote a Ruby container class that simulates the Trie data structure. Supports basic insertion, search, and deletion operations. Includes other functions, such as converting the Trie into an array and printing all the strings contained in the Trie. Used Git and GitHub to save all the code. I made this container to practice a new language I learned.\",\n        tools: [\"ruby\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Document Drop Application\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\n            \"javascript\",\n            \"react\",\n            \"bootstrap\",\n            \"mongodb\",\n            \"googlecloud\",\n            \"css\",\n            \"jest\",\n            \"linux\",\n        ],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Constrained Topo Sort\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\"java\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Run Like Hell\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\"java\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Sneaky Rooks\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\"c\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Lonely Party Array\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\"c\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Listy Strings\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\"c\", \"linux\"],\n    },\n    {\n        id: uuid(),\n        number: count++,\n        links: [\n            {\n                github: null,\n            },\n            {\n                url: null,\n            },\n        ],\n        title: \"Reflections and Kindred Spirits\",\n        description:\n            \"This website allows users to store information in the form of a note for it to be sent to recipients via email if an untimely death occurs. I developed the front end using JavaScript and the ReactJS framework. We used the SendGrid API to send the emails out to its recipients.\",\n        tools: [\"c\", \"linux\"],\n    },\n];\n\nexport default projects;\n","import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n    Collapse,\n    ButtonGroup,\n} from \"react-bootstrap\";\nimport Project from \"../project/Project\";\nimport projectList from \"../projectObjects/projectObjects\";\nimport \"./Projects.css\";\n\nclass Projects extends React.Component {\n    state = {\n        projects: projectList,\n        isExpanded: false,\n    };\n\n    handleExpand = () => {\n        this.setState({ isExpanded: true });\n    };\n\n    handleCollapse = () => {\n        this.setState({ isExpanded: false });\n    };\n\n    toggleButton = (isExpanded) => {\n        if (!isExpanded) {\n            return (\n                <Button\n                    className=\"project-button\"\n                    variant=\"primary\"\n                    onClick={this.handleExpand}\n                >\n                    Show More\n                </Button>\n            );\n        } else {\n            return (\n                <Button\n                    className=\"project-button\"\n                    variant=\"outline-primary\"\n                    onClick={this.handleCollapse}\n                >\n                    Show Less\n                </Button>\n            );\n        }\n    };\n\n    getOtherProjects = (projects) => {\n        const otherProjects = projects.filter((project) => project.number > 2);\n        return otherProjects;\n    };\n\n    render() {\n        const { isExpanded, projects } = this.state;\n\n        const otherProjects = this.getOtherProjects(projects);\n\n        return (\n            <div id=\"projects\">\n                <Container id=\"projects-container\" fluid>\n                    <Row id=\"title-row\" className=\"justify-content-md-center\">\n                        <Col id=\"projects-title-container\" md=\"auto\">\n                            <p className=\"display-4\">Projects</p>\n                            <hr style={styles.mainLine} />\n                        </Col>\n                    </Row>\n                    <Row id=\"text-row\" className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"project-text\">\n                                Some of these projects consist of web\n                                applications for internship challenges,\n                                Hackathons, or coursework for some of my\n                                classes. Projects for some of my courses will\n                                not be available publicly on GitHub for Academic\n                                Integrity Reasons. Links to application or\n                                GitHub repositories will be on the top-right of\n                                every project.\n                            </p>\n                            <br />\n                        </Col>\n                    </Row>\n                    <Row id=\"project-row\" xl={3} lg={2} sm={1}>\n                        <Project\n                            key={projects[0].id}\n                            project={projects[0]}\n                            tools={this.props.tools}\n                        />\n                        <Project\n                            key={projects[1].id}\n                            project={projects[1]}\n                            tools={this.props.tools}\n                        />\n                        <Project\n                            key={projects[2].id}\n                            project={projects[2]}\n                            tools={this.props.tools}\n                        />\n                    </Row>\n                    <Collapse id=\"projects-collapse\" in={isExpanded}>\n                        <Row\n                            id=\"more-projects-row\"\n                            xl={3}\n                            lg={2}\n                            sm={1}\n                            className=\"justify-content-md-center\"\n                            style={{ paddingBottom: 75 }}\n                        >\n                            {otherProjects.map((project) => (\n                                <Project\n                                    key={project.id}\n                                    project={project}\n                                    tools={this.props.tools}\n                                />\n                            ))}\n                        </Row>\n                    </Collapse>\n                    <Row id=\"button-row\" className=\"justify-content-sm-center\">\n                        <ButtonGroup id=\"button-container\" bsPrefix=\"btn-group\">\n                            {this.toggleButton(isExpanded)}\n                        </ButtonGroup>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    mainLine: {\n        borderColor: \"#ff1b1c\",\n        borderWidth: 5,\n    },\n};\n\nexport default Projects;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./Experience.css\";\n\nclass Experience extends React.Component {\n    render() {\n        return (\n            <div id=\"experience\">\n                <Container id=\"experience-container\" fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"experience-title\" className=\"display-4\">\n                                Experience\n                            </p>\n                            <hr style={styles.mainLine} />\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <h2 id=\"experience-company\">\n                                <strong>\n                                    Car Wash Palace and Detail Center\n                                </strong>\n                            </h2>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <h5\n                                id=\"experience-position\"\n                                style={{ color: \"#39689b\" }}\n                            >\n                                Detail Specialist and Sales Associate\n                            </h5>\n                        </Col>\n                    </Row>\n                    <Row\n                        id=\"experience-date-row\"\n                        className=\"justify-content-md-center\"\n                    >\n                        <Col md=\"auto\">\n                            <h5 id=\"experience-info\">\n                                <em>May 2017 - PRESENT</em>\n                            </h5>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"experience-text\">\n                                Currently work 30 hours a week and perform auto\n                                detailing services on various vehicles. I am\n                                also responsible for the sales of detail\n                                sercives and products. This is a part-time job\n                                to support myself and pay my living expenses.\n                                This job really helped with my interpersonal\n                                skills at a professional level because of how\n                                much I interact with customers.\n                            </p>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    mainLine: {\n        borderColor: \"#FF1B1C\",\n        borderWidth: 5,\n    },\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./ContactMe.css\";\n\n// const axios = require(\"axios\");\n\nclass ContactMe extends React.Component {\n    // NOTE: Will put up form later\n    // handleEmail = (event) => {\n    //     const { URL } = this.props;\n\n    //     let newEmail = {\n    //         name: event.name,\n    //         email: event.email,\n    //         message: event.message,\n    //     };\n\n    //     axios\n    //         .post(URL + \"/email\", newEmail)\n    //         .then((res) => {\n    //             if (res.status !== 200) {\n    //                 event.preventDefault();\n    //             }\n    //             const emailForm = document.forms[\"form-container\"];\n    //             emailForm.reset();\n    //             console.log(\"Email sent\");\n    //             console.log(res);\n    //         })\n    //         .catch((error) => {\n    //             console.log(error);\n    //         });\n    // };\n\n    // schema = Yup.object({\n    //     name: Yup.string().required(\"Please provide a name.\"),\n    //     email: Yup.string().required(\"Please provide a valid email address.\"),\n    //     message: Yup.string().required(\"Please provide a message.\"),\n    // });\n\n    // emailForm = () => (\n    //     <Formik\n    //         id=\"formik-container\"\n    //         validationSchema={this.schema}\n    //         onSubmit={this.handleEmail}\n    //         initialValues={{ name: \"\", email: \"\", message: \"\" }}\n    //     >\n    //         {({ handleSubmit, errors, handleChange }) => (\n    //             <Form id=\"form-container\" onSubmit={handleSubmit} noValidate>\n    //                 <Form.Row>\n    //                     <Form.Group id=\"name-group\" as={Col}>\n    //                         <Form.Control\n    //                             id=\"name-input\"\n    //                             type=\"text\"\n    //                             name=\"name\"\n    //                             placeholder=\"Name\"\n    //                             onChange={handleChange}\n    //                             isInvalid={!!errors.name}\n    //                         ></Form.Control>\n    //                         <Form.Control.Feedback type=\"invalid\" tooltip>\n    //                             {errors.name}\n    //                         </Form.Control.Feedback>\n    //                     </Form.Group>\n    //                 </Form.Row>\n    //                 <Form.Row>\n    //                     <Form.Group id=\"email-group\" as={Col}>\n    //                         <Form.Control\n    //                             id=\"email-input\"\n    //                             type=\"email\"\n    //                             name=\"email\"\n    //                             placeholder=\"Email\"\n    //                             onChange={handleChange}\n    //                             isInvalid={!!errors.name}\n    //                         ></Form.Control>\n    //                         <Form.Control.Feedback type=\"invalid\" tooltip>\n    //                             {errors.email}\n    //                         </Form.Control.Feedback>\n    //                     </Form.Group>\n    //                 </Form.Row>\n    //                 <Form.Row>\n    //                     <Form.Group id=\"message-group\" as={Col}>\n    //                         <Form.Control\n    //                             id=\"message-input\"\n    //                             name=\"message\"\n    //                             as=\"textarea\"\n    //                             rows=\"8\"\n    //                             placeholder=\"Message\"\n    //                             onChange={handleChange}\n    //                             isInvalid={!!errors.message}\n    //                         ></Form.Control>\n    //                         <Form.Control.Feedback type=\"invalid\" tooltip>\n    //                             {errors.message}\n    //                         </Form.Control.Feedback>\n    //                     </Form.Group>\n    //                 </Form.Row>\n    //                 <Form.Row\n    //                     id=\"button-row\"\n    //                     className=\"justify-content-sm-center\"\n    //                 >\n    //                     <Form.Group>\n    //                         <Button\n    //                             id=\"send-button\"\n    //                             type=\"submit\"\n    //                             variant=\"info\"\n    //                         >\n    //                             Send\n    //                         </Button>\n    //                     </Form.Group>\n    //                 </Form.Row>\n    //             </Form>\n    //         )}\n    //     </Formik>\n    // );\n\n    render() {\n        return (\n            <div id=\"contact\">\n                <Container id=\"contact-container\" fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"contact-title\" className=\"display-4\">\n                                Contact Me\n                            </p>\n                            <hr style={styles.mainLine} />\n                        </Col>\n                    </Row>\n                    <Row id=\"contact-row\" className=\"justify-content-sm-center\">\n                        <Col id=\"contact-text-col\" md=\"auto\">\n                            <p id=\"contact-text\">\n                                If you are looking for a Software Engineer for\n                                an internship position, feel free to drop me an\n                                email and I will get back to you as soon as\n                                possible.\n                            </p>\n                        </Col>\n                        <Col id=\"contact-button-col\" md=\"auto\">\n                            <a\n                                id=\"contact-anchor\"\n                                href=\"mailto:stefanwerleman@yahoo.com\"\n                            >\n                                <Button\n                                    id=\"contact-button\"\n                                    variant=\"outline-info\"\n                                    size=\"lg\"\n                                >\n                                    stefanwerleman@yahoo.com\n                                </Button>\n                            </a>\n                        </Col>\n                        <Col id=\"contact-button-col\" md=\"auto\">\n                            <a\n                                id=\"contact-anchor\"\n                                href=\"https://github.com/stefanwerleman\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <Button\n                                    id=\"contact-button\"\n                                    variant=\"outline-info\"\n                                    size=\"lg\"\n                                >\n                                    GitHub\n                                </Button>\n                            </a>\n                        </Col>\n                        <Col id=\"contact-button-col\" md=\"auto\">\n                            <a\n                                id=\"contact-anchor\"\n                                href=\"https://www.linkedin.com/in/stefanwerleman/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <Button\n                                    id=\"contact-button\"\n                                    variant=\"outline-info\"\n                                    size=\"lg\"\n                                >\n                                    LinkedIn\n                                </Button>\n                            </a>\n                        </Col>\n                    </Row>\n                    {/*\n                    NOTE: Will put up form later\n                    <br />\n                     <Row id=\"email-row\" className=\"justify-content-sm-center\">\n                        { {this.emailForm()} }\n                    </Row> */}\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    mainLine: { borderColor: \"#5b9bbc\", borderWidth: 5 },\n};\n\nexport default ContactMe;\n","import {v1 as uuid} from \"uuid\";\n\nconst skills = [\n    {\n        id: uuid(),\n        langs: [\"c\"],\n        header: \"C\",\n        text:\n            \"This was the first programming language I learned at UCF. I have implemented some of my first algorithms and data structures in this language, such as sorting algorithms, stacks, queues, and linked lists.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"java\"],\n        header: \"Java\",\n        text:\n            \"I used this language for my second algorithms and data structures class. I implemented data structures and algorithms related to graph theory. This is my go to language for programming competitions.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"javascript\"],\n        header: \"JavaScript\",\n        text:\n            \"This is my go to language when it comes to developing websites or mobile applications. I developed a facebook clone website using DOM manipulation.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"python\", \"django\", \"jupyter\"],\n        header: \"Python, Django & Jupyter\",\n        text:\n            \"This is one of my favorite programming languages because of how powerful and open-source it is. I am currently learning Data Science and Machine Learning with this language. I will be making a data science based mobile application soon in this language. I am also using Jupyter Notebook to analyze data for my Physics with Calculus Lab.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"html\", \"css\"],\n        header: \"HTML & CSS\",\n        text:\n            \"I mainly use HTML for smaller web applications like the facebook clone, but I use and will continue to use CSS for every web application I develop.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"cpp\"],\n        header: \"C++\",\n        text:\n            \"This was probably one of the most difficult languages I had to learn but this language has a lot value in it. I am starting to code in this language for my programming competitions for performance reasons.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"ruby\"],\n        header: \"Ruby\",\n        text:\n            \"This language is new to me, so I only have some beginner level projects in this language. The main thing I want to learn with this language is the Ruby on Rails framework.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"react\"],\n        header: \"React & React Native\",\n        text:\n            \"React is my favorite JavaScript framework. I used React for this personal website and I used React Native to develop my All Things Books app for the KnightHacks Hackathon.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"node\"],\n        header: \"Node.js\",\n        text:\n            \"I mainly use Node.js to develop my server or RestAPI for all my web applications. With Node.js, I use Express.js for all routing purposes.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"npm\"],\n        header: \"NPM\",\n        text:\n            \"This my favorite package manager to run my dev environmnent and to download various packages and APIs.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"github\"],\n        header: \"Git & GitHub\",\n        text:\n            \"Most of my recent projects were saved using Git and GitHub. This is a staple for any of my web or mobile projects because I would like employers to see them and it is a good place to refer back to whenever I forget something.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"linux\", \"windows\"],\n        header: \"Linux & Windows\",\n        text:\n            \"I mainly use Linux to run my dev environment, but on Ubuntu WSL. All of my projects are linux based but I still like to use certain Windows features.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"mocha\", \"jest\"],\n        header: \"Mocha & Jest\",\n        text:\n            \"I used Mocha to test the server of my facebook clone application but I am starting to lean towards Jest whenever I am using React and Node.js.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"mongodb\"],\n        header: \"MongoDB\",\n        text:\n            \"This was the first database program I used. With my facebook clone app I used Mongo Atlas to help me store data in the Cloud.\",\n    },\n    {\n        id: uuid(),\n        langs: [\"excel\", \"word\", \"powerpoint\"],\n        header: \"Excel, Word & PowerPoint\",\n        text:\n            \"These three applications are the reasons why I still use Windows I have been using these applications since high school and I still use them today.\",\n    },\n];\n\nexport default skills;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nimport \"./Skill.css\";\n\nclass Skill extends React.Component {\n    render() {\n        const { langs, header, text } = this.props.skill;\n        const tools = this.props.tools;\n\n        return (\n            <div id=\"skill\">\n                <Container id=\"skill-container\" fluid>\n                    <Row>\n                        <h3 id=\"skill-icons\">\n                            {langs.map((lang) => tools[lang])}\n                        </h3>\n                    </Row>\n                    <Row>\n                        <h5 id=\"skill-sub\">\n                            <strong>{header}</strong>\n                        </h5>\n                    </Row>\n                    <Row>\n                        <p id=\"skill-text\">{text}</p>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Skill;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport SkillList from \"../skillList/skillList\";\nimport Skill from \"../skill/Skill\";\nimport \"./Skills.css\";\n\nclass Skills extends React.Component {\n    state = {\n        skills: SkillList,\n    };\n\n    render() {\n        const { skills } = this.state;\n\n        return (\n            <div id=\"skills\">\n                <Container id=\"skills-container\" style={styles.container} fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"skills-title\" className=\"display-4\">\n                                Skills\n                            </p>\n                            <hr style={styles.mainLine} />\n                        </Col>\n                    </Row>\n                    <Row\n                        id=\"skills-text-row\"\n                        className=\"justify-content-md-center\"\n                    >\n                        <Col md=\"auto\">\n                            <p id=\"skills-text\">\n                                I worked with a wide variety of programming\n                                languages. Whenever I work on web applications I\n                                rely on <strong>JavaScript</strong> or{\" \"}\n                                <strong>Django</strong> with their respective\n                                frameworks. For programming competitions or\n                                algorithms and data structures, I heavily use{\" \"}\n                                <strong>Java</strong> because that is the\n                                language I am most proficient in. Whenever I{\" \"}\n                                need the most performance I use{\" \"}\n                                <strong>C</strong>, however I am starting lean\n                                more towards <strong>C++</strong> for\n                                performance. I mostly use{\" \"}\n                                <strong>Google Cloud Technologies</strong> to\n                                find APIs for most of my applications, the{\" \"}\n                                <a\n                                    href=\"https://github.com/KnightHacks-GMSJ/AllThingsBooks\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <strong>All Things Books</strong>\n                                </a>{\" \"}\n                                React Native application uses Google's{\" \"}\n                                <a\n                                    href=\"https://developers.google.com/books\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <strong>Books API</strong>\n                                </a>\n                                .\n                            </p>\n                        </Col>\n                    </Row>\n                    <Row id=\"skills-row\">\n                        {skills.map((skill) => (\n                            <Skill\n                                key={skill.id}\n                                skill={skill}\n                                tools={this.props.tools}\n                            />\n                        ))}\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    container: {\n        backgroundColor: \"#eee\",\n    },\n    mainLine: {\n        borderColor: \"#FF1B1C\",\n        borderWidth: 5,\n    },\n    smallLines: { borderColor: \"#39689b\" },\n};\n\nexport default Skills;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./Education.css\";\n\n// TODO: Include FLit-Path Organization in here.\nclass Education extends React.Component {\n    render() {\n        return (\n            <div id=\"education\">\n                <Container id=\"education-container\" fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"education-title\" className=\"display-4\">\n                                Education\n                            </p>\n                            <hr style={styles.mainLine} />\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <h2 id=\"education-school\">\n                                <strong>University of Central Florida</strong>\n                            </h2>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <h5\n                                id=\"education-major\"\n                                style={{ color: \"#39689b\" }}\n                            >\n                                Bachelor of Science in Computer Science\n                            </h5>\n                        </Col>\n                    </Row>\n                    <Row\n                        id=\"education-info-row\"\n                        className=\"justify-content-md-center\"\n                    >\n                        <Col md=\"auto\">\n                            <h5 id=\"education-info\">\n                                <strong>Graduating:</strong> August 2021 |{\" \"}\n                                <strong>GPA:</strong> 3.826\n                            </h5>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <p id=\"education-text\">\n                                At UCF, I studied <strong>Algorithms</strong>{\" \"}\n                                and <strong>Data Structures</strong>, Discrete\n                                Mathematics, <strong>Web Development</strong>,\n                                and Computer Architecture. Here I have gained a\n                                strong foundation in computing, mathematical\n                                theory of computing, and different programming\n                                pardigms. I learned the core fundamentals of\n                                algorithms, data structures, and problem solving\n                                with the <strong>C</strong> and{\" \"}\n                                <strong>Java</strong> programming languages.\n                                <br />\n                                <br />\n                                In the Fall of 2020, I took this full-stack web\n                                development course where I learned to develop a\n                                web application using the MERN stack{\" \"}\n                                <strong>\n                                    (MongoDB, ExpressJS, ReactJS, and NodeJs)\n                                </strong>\n                                .\n                                <br />\n                                <br />\n                                In the Spring of 2020, I took a competitive\n                                programming course that allowed me to practice\n                                and improve on my{\" \"}\n                                <strong>problem-solving</strong> skills,\n                                algorithms, and data structures. Online contests\n                                were used frequently to prepare for the in-class\n                                contests, such as <strong>CodeForces</strong>,{\" \"}\n                                <strong>Google Code Jam</strong>, Kattis, and\n                                UCF's programming team practice contests.\n                                <br />\n                                <br />\n                                Now I am currently taking a functional\n                                programming class where I am learning{\" \"}\n                                <strong>Haskell</strong> and{\" \"}\n                                <strong>Erlang</strong>. I am also starting to\n                                learn <strong>Data Science</strong> and{\" \"}\n                                <strong>Machine Learning</strong> using{\" \"}\n                                <strong>Python</strong>\n                                with its special libraries.\n                            </p>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    mainLine: {\n        borderColor: \"#FF1B1C\",\n        borderWidth: 5,\n    },\n};\n\nexport default Education;\n","import React from \"react\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Front from \"./components/front/Front\";\nimport AboutMe from \"./components/about/AboutMe\";\nimport Projects from \"./components/projects/Projects\";\nimport Experience from \"./components/experience/Experience\";\nimport ContactMe from \"./components/contact/ContactMe\";\nimport Skills from \"./components/skills/Skills\";\nimport Education from \"./components/education/Education\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport { DiRuby, DiDjango } from \"react-icons/di\";\nimport {\n    SiCodio,\n    SiJava,\n    SiJavascript,\n    SiPython,\n    SiHtml5,\n    SiCss3,\n    SiNodeDotJs,\n    SiReact,\n    SiLinux,\n    SiJest,\n    SiMongodb,\n    SiGooglecloud,\n    SiMocha,\n    SiBootstrap,\n    SiCplusplus,\n    SiMicrosoftword,\n    SiMicrosoftexcel,\n    SiMicrosoftpowerpoint,\n    SiWindows,\n    SiNpm,\n    SiJupyter,\n} from \"react-icons/si\";\n\nconst dotenv = require(\"dotenv\");\ndotenv.config();\n\nconst API_URL = process.env.REACT_APP_SERVER_URL;\nclass App extends React.Component {\n    render() {\n        const tools = {\n            java: <SiJava className=\"tool\" style={{ color: \"#ec2025\" }} />,\n            javascript: (\n                <SiJavascript\n                    className=\"tool\"\n                    style={{ color: \"#f7e018\", backgroundColor: \"black\" }}\n                />\n            ),\n            python: <SiPython className=\"tool\" style={{ color: \"#008397\" }} />,\n            jupyter: (\n                <SiJupyter className=\"tool\" style={{ color: \"#f37821\" }} />\n            ),\n            html: <SiHtml5 className=\"tool\" style={{ color: \"#e44d26\" }} />,\n            css: <SiCss3 className=\"tool\" style={{ color: \"#379ad6\" }} />,\n            react: <SiReact className=\"tool\" style={{ color: \"#7ddfff\" }} />,\n            reactnative: (\n                <SiReact className=\"tool\" style={{ color: \"#7ddfff\" }} />\n            ),\n            node: <SiNodeDotJs className=\"tool\" style={{ color: \"#689f63\" }} />,\n            linux: <SiLinux className=\"tool\" />,\n            jest: <SiJest className=\"tool\" style={{ color: \"#99425b\" }} />,\n            c: <SiCodio className=\"tool\" style={{ color: \"#5c6bc0\" }} />,\n            ruby: <DiRuby className=\"tool\" style={{ color: \"#e51f49\" }} />,\n            django: (\n                <DiDjango\n                    className=\"tool\"\n                    style={{ color: \"#103e2e\", fontSize: \"150%\" }}\n                />\n            ),\n            mongodb: (\n                <SiMongodb className=\"tool\" style={{ color: \"#50aa4c\" }} />\n            ),\n            googlecloud: (\n                <SiGooglecloud className=\"tool\" style={{ color: \"#1a73e8\" }} />\n            ),\n            mocha: <SiMocha className=\"tool\" style={{ color: \"#8d6748\" }} />,\n            bootstrap: (\n                <SiBootstrap className=\"tool\" style={{ color: \"#553a7d\" }} />\n            ),\n            cpp: <SiCplusplus className=\"tool\" style={{ color: \"#649ad2\" }} />,\n            github: <GoMarkGithub className=\"tool\" />,\n            npm: (\n                <SiNpm\n                    className=\"tool\"\n                    style={{ color: \"#cc3534\", fontSize: \"150%\" }}\n                />\n            ),\n            word: (\n                <SiMicrosoftword\n                    className=\"tool\"\n                    style={{ color: \"#233a7c\" }}\n                />\n            ),\n            excel: (\n                <SiMicrosoftexcel\n                    className=\"tool\"\n                    style={{ color: \"#207345\" }}\n                />\n            ),\n            powerpoint: (\n                <SiMicrosoftpowerpoint\n                    className=\"tool\"\n                    style={{ color: \"#d24625\" }}\n                />\n            ),\n            windows: (\n                <SiWindows className=\"tool\" style={{ color: \"#00bdf6\" }} />\n            ),\n        };\n        return (\n            <div id=\"root\" style={{ position: \"absolute\" }}>\n                <Front />\n                <Navigation />\n                <AboutMe />\n                <Skills tools={tools} />\n                <Projects tools={tools} />\n                <Education />\n                <Experience />\n                <ContactMe URL={API_URL} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}